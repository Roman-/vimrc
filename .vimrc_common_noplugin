" common .vimrc to be included in all .vimrcs (Terminal Vim, Qt Fakevim, IdeaVIM)
set relativenumber
set number
set nocompatible
set ignorecase
set incsearch
set hlsearch
filetype plugin indent on
set shiftwidth=4 tabstop=4 shiftwidth=4 smarttab expandtab
set clipboard^=unnamed,unnamedplus

" shouldn't it be by default?
nmap dl vld
nmap dh vhd
nmap cl vlc
nmap ch vhc
nmap yl vly
nmap yh vhy

"{{{ My Esc button is swapped with the CAPS LOCK btn on the OS level. Reasoning: http://vim.wikia.com/wiki/Avoid_the_escape_key
nnoremap <space><esc> :noh<Enter>
" nnoremap <esc> :noh<Enter> " this enters vim in replace mode wtf
nnoremap <tab> :noh<Enter>
"}}}


" positioning
nmap <space> <nop>
noremap <space>u zbkj
noremap <space>d ztkj
noremap <space><space> zz

" u for undo, U for redo
nnoremap U <C-r>
" D to delete the entire line, d<Home>/<End> to delete till start/end
nnoremap D dd
" Enter to insert a new line but stay in normal mode
nnoremap <Return> o<Esc>
nnoremap <S-Return> O<Esc>


"{{{hjkl navigation
noremap J 5j
noremap K 5k
noremap H 15h
noremap L 15l
noremap <c-h> 5h
noremap <c-l> 5l
noremap <space>h ^
noremap <space>l $
" J used to be for join - gj
nnoremap zj mz:join<Enter>`z
nnoremap <space>m q
"}}}

" navigating between tabs (aka buffers) with []
noremap ) :bn<CR>
noremap ( :bp<CR>

set viewoptions-=options
syntax on
autocmd BufNewFile,BufRead * if expand('%:t') !~ '\.' | endif
"{{{ making habitual hotkeys work in vim
nnoremap <C-a> ggVG
" some editors do support this
inoremap <C-BS> <c-w>
" ctrl+d = signal eof = quit
nnoremap <C-d> :q<Enter>
nnoremap <space>s :w<Enter>
nnoremap <space>S :wa<Enter>
"}}}
"{{{ copy / paste paste

" copy
nnoremap <C-c> myyiw`y
vnoremap <C-c> y
" enter special symbols with control-C
inoremap <C-c> <C-v>

" paste: <C-V> always puts things that were YANKED, not deleted;
inoremap <C-v> <C-r>0
cnoremap <C-v> <C-r>0
nnoremap <C-v> i<C-r>0<Esc>
" change-in-word is an extremely common action; use q for it
nnoremap q ciw
nnoremap Q daw
vnoremap q c
nnoremap <space>w ciw<C-r>0
" change-after-equal-sign
nnoremap c= ^f=wC
nnoremap <space>q mXyiw`X


"}}}
"{{{ cpp-related
" space + ; = append ';' to the end of the line
nnoremap <space>; msA;`s
" space + / = comment the current line
nnoremap <space>/ mtI//<Esc>`t
vnoremap <space>/ ms:s/^/\/\//g<Enter>`s:noh<Enter>
" duplicate current line and comment it for fast change
nnoremap <space>y yymoPI// `o
" when the cursor is on the word, add #include directive with that word on space + i
nnoremap <space>i miyiw?#include<Enter>o#include <pa>`ik$/<C-r>0<Enter>zh
" insert for construction
nnoremap <space>f afor (size_t i = 0; i < N; ++i)FNs
nnoremap co ocout << N << endl;FNs
" insert extended if-else construction with brackets
nnoremap <space>e aif (N)o{o}oelseo{o}?N<Enter>s
" space-[ for opening braces
nnoremap <space>[ A {o}O
" replace 'Abc' with 'const Abc&'
nnoremap <space>c diwiconst pa&
nnoremap <C-w> :q<Enter>
nnoremap <S-w> :wq<Enter>
" go from function declaration to definition: copy line, mark position, copy
" nmap <space>] mt"lyy?class <Enter>w"cyiw`t<c-y>Go<c-r>lk^f(bi<C-r>c:::s:^\s*:<Enter>:noh<Enter>$s {<Enter>}O
" nmap <space>] yy<c-y>Gp

" Mapping Ctrl-Backspace does not work in terminal Vim. Following is a workaround.
imap <C-w> <Nop>
noremap! <C-BS> <C-w>
noremap! <C-h> <C-w>

" TODO depending on file extention
inoremap <c-f> function 

"surround selected with quotes or spaces
nmap z<Space> i <Esc>la <Esc>h
vmap z<Space> "tdi t <Esc>
vmap z" "tdi"t"<Esc>
vmap z' "tdi't'<Esc>
vmap z< "tdi<t><Esc>
